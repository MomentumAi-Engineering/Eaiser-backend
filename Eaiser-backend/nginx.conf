# Advanced Nginx Configuration for SnapFix Enterprise Scalability
# Handles 100,000+ concurrent users with enterprise-grade features

# Global settings for maximum performance
user nginx;
worker_processes auto;  # Auto-detect CPU cores
worker_rlimit_nofile 65535;  # Maximum file descriptors
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 8192;   # Increased for enterprise load
    use epoll;                 # Linux-specific, efficient event handling
    multi_accept on;           # Accept multiple connections at once
    accept_mutex off;          # Disable accept mutex for better performance
}

http {
    # MIME types and basic settings
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Logging format for advanced analytics
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                   '$status $body_bytes_sent "$http_referer" '
                   '"$http_user_agent" "$http_x_forwarded_for" '
                   'rt=$request_time uct="$upstream_connect_time" '
                   'uht="$upstream_header_time" urt="$upstream_response_time"';
    
    access_log /var/log/nginx/access.log main;
    
    # Performance optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 75;
    keepalive_requests 1000;
    types_hash_max_size 4096;
    server_tokens off;  # Hide nginx version
    
    # Buffer sizes for handling large requests
    client_body_buffer_size 128k;
    client_max_body_size 50m;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
    
    # Timeouts
    client_body_timeout 12;
    client_header_timeout 12;
    send_timeout 10;
    
    # Gzip compression with advanced settings
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_proxied any;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # Brotli compression (if module available)
    # brotli on;
    # brotli_comp_level 6;
    # brotli_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    
    # Advanced rate limiting zones
    limit_req_zone $binary_remote_addr zone=api:20m rate=200r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=upload:10m rate=50r/s;
    limit_req_zone $binary_remote_addr zone=search:10m rate=100r/s;
    
    # Connection limiting
    limit_conn_zone $binary_remote_addr zone=perip:10m;
    limit_conn_zone $server_name zone=perserver:10m;
    
    # SSL/TLS Configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;
    
    # Security headers
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' https:; connect-src 'self' https:; media-src 'self'; object-src 'none'; child-src 'none'; worker-src 'none'; frame-ancestors 'none'; form-action 'self'; base-uri 'self';" always;
    
    # Upstream servers with advanced health checks and load balancing
    upstream snapfix_backend {
        least_conn;  # Load balancing method for better distribution
        
        # Primary cluster (20 instances for 100k users)
        server 127.0.0.1:10000 max_fails=3 fail_timeout=30s weight=3;
        server 127.0.0.1:10001 max_fails=3 fail_timeout=30s weight=3;
        server 127.0.0.1:10002 max_fails=3 fail_timeout=30s weight=3;
        server 127.0.0.1:10003 max_fails=3 fail_timeout=30s weight=3;
        server 127.0.0.1:10004 max_fails=3 fail_timeout=30s weight=3;
        server 127.0.0.1:10005 max_fails=3 fail_timeout=30s weight=3;
        server 127.0.0.1:10006 max_fails=3 fail_timeout=30s weight=3;
        server 127.0.0.1:10007 max_fails=3 fail_timeout=30s weight=3;
        server 127.0.0.1:10008 max_fails=3 fail_timeout=30s weight=3;
        server 127.0.0.1:10009 max_fails=3 fail_timeout=30s weight=3;
        server 127.0.0.1:10010 max_fails=3 fail_timeout=30s weight=2;
        server 127.0.0.1:10011 max_fails=3 fail_timeout=30s weight=2;
        server 127.0.0.1:10012 max_fails=3 fail_timeout=30s weight=2;
        server 127.0.0.1:10013 max_fails=3 fail_timeout=30s weight=2;
        server 127.0.0.1:10014 max_fails=3 fail_timeout=30s weight=2;
        server 127.0.0.1:10015 max_fails=3 fail_timeout=30s weight=2;
        server 127.0.0.1:10016 max_fails=3 fail_timeout=30s weight=2;
        server 127.0.0.1:10017 max_fails=3 fail_timeout=30s weight=2;
        server 127.0.0.1:10018 max_fails=3 fail_timeout=30s weight=2;
        server 127.0.0.1:10019 max_fails=3 fail_timeout=30s weight=2;
        
        # Connection pooling
        keepalive 64;
        keepalive_requests 1000;
        keepalive_timeout 60s;
    }
    
    # Upstream for static content (CDN integration)
    upstream static_content {
        server 127.0.0.1:8080 max_fails=2 fail_timeout=10s;
        keepalive 16;
    }
    
    # Health Check Upstream (for monitoring)
    upstream snapfix_health {
        server snapfix-api-1:10000;
        server snapfix-api-2:10000;
        server snapfix-api-3:10000;
        server snapfix-api-4:10000;
        server snapfix-api-5:10000;
    }

    # Main Server Configuration
    server {
        listen 80;
        server_name localhost snapfix.local;
        
        # Security Headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
        
        # Hide Nginx version
        server_tokens off;
        
        # Root location - API endpoints
        location / {
            # Rate limiting
            limit_req zone=api burst=200 nodelay;
            
            # Proxy settings
            proxy_pass http://snapfix_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # Timeouts for high load
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Buffer settings for performance
            proxy_buffering on;
            proxy_buffer_size 128k;
            proxy_buffers 4 256k;
            proxy_busy_buffers_size 256k;
        }
        
        # API Health Check Endpoint
        location /health {
            access_log off;
            proxy_pass http://snapfix_health/health;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_connect_timeout 5s;
            proxy_read_timeout 5s;
        }
        
        # Static Files (if any)
        location /static/ {
            alias /var/www/static/;
            expires 1y;
            add_header Cache-Control "public, immutable";
            access_log off;
        }
        
        # Login endpoint with stricter rate limiting
        location /api/auth/login {
            limit_req zone=login burst=10 nodelay;
            
            proxy_pass http://snapfix_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # WebSocket support (if needed for real-time features)
        location /ws {
            proxy_pass http://snapfix_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket specific timeouts
            proxy_read_timeout 86400;
            proxy_send_timeout 86400;
        }
        
        # Deny access to sensitive files
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        # Custom error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
    
    # HTTPS Configuration (for production)
    server {
        listen 443 ssl http2;
        server_name localhost snapfix.local;
        
        # SSL Configuration
        ssl_certificate /etc/nginx/ssl/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/key.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        
        # HSTS
        add_header Strict-Transport-Security "max-age=31536000" always;
        
        # Same configuration as HTTP but with SSL
        location / {
            limit_req zone=api burst=200 nodelay;
            
            proxy_pass http://snapfix_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }
    }
    
    # Monitoring and Status Page
    server {
        listen 8080;
        server_name localhost;
        
        location /nginx_status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            allow 172.20.0.0/16;  # Docker network
            deny all;
        }
    }
}