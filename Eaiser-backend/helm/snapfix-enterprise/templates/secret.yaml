{{/*
üîê SnapFix Enterprise - Advanced Secrets Template
üõ°Ô∏è Sensitive Configuration, API Keys, Certificates & Passwords
üîí Multi-Environment Support with External Secrets Integration
*/}}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "snapfix-enterprise.fullname" . }}-secrets
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "snapfix-enterprise.labels" . | nindent 4 }}
    app.kubernetes.io/component: secrets
    app.kubernetes.io/part-of: snapfix-enterprise
  annotations:
    # Secret versioning and management
    secret.kubernetes.io/version: "{{ .Values.app.version }}"
    secret.kubernetes.io/environment: "{{ .Values.global.environment }}"
    secret.kubernetes.io/last-rotated: "{{ now | date "2006-01-02T15:04:05Z" }}"
    {{- if .Values.externalSecrets.enabled }}
    # External Secrets Operator annotations
    external-secrets.io/managed-by: "external-secrets-operator"
    external-secrets.io/backend: "{{ .Values.externalSecrets.backend }}"
    {{- end }}
type: Opaque
data:
  # ========================================
  # DATABASE CREDENTIALS
  # ========================================
  
  # PostgreSQL credentials
  DB_PASSWORD: {{ .Values.postgresql.auth.password | b64enc | quote }}
  DB_POSTGRES_PASSWORD: {{ .Values.postgresql.auth.postgresPassword | b64enc | quote }}
  DB_REPLICATION_PASSWORD: {{ .Values.postgresql.auth.replicationPassword | b64enc | quote }}
  
  # MongoDB credentials
  MONGO_PASSWORD: {{ .Values.mongodb.auth.password | b64enc | quote }}
  MONGO_ROOT_PASSWORD: {{ .Values.mongodb.auth.rootPassword | b64enc | quote }}
  MONGO_REPLICA_SET_KEY: {{ .Values.mongodb.auth.replicaSetKey | b64enc | quote }}
  
  # ========================================
  # CACHE & QUEUE CREDENTIALS
  # ========================================
  
  # Redis credentials
  REDIS_PASSWORD: {{ .Values.redis.auth.password | b64enc | quote }}
  REDIS_AUTH_TOKEN: {{ .Values.app.redis.authToken | default (randAlphaNum 32) | b64enc | quote }}
  
  # RabbitMQ credentials
  RABBITMQ_PASSWORD: {{ .Values.rabbitmq.auth.password | b64enc | quote }}
  RABBITMQ_ERLANG_COOKIE: {{ .Values.rabbitmq.auth.erlangCookie | b64enc | quote }}
  
  # ========================================
  # APPLICATION SECRETS
  # ========================================
  
  # JWT & Encryption keys
  JWT_SECRET_KEY: {{ .Values.app.jwt.secretKey | default (randAlphaNum 64) | b64enc | quote }}
  JWT_REFRESH_SECRET_KEY: {{ .Values.app.jwt.refreshSecretKey | default (randAlphaNum 64) | b64enc | quote }}
  ENCRYPTION_KEY: {{ .Values.app.encryption.key | default (randAlphaNum 32) | b64enc | quote }}
  FERNET_KEY: {{ .Values.app.encryption.fernetKey | default (randAlphaNum 44) | b64enc | quote }}
  
  # Session & CSRF secrets
  SESSION_SECRET_KEY: {{ .Values.app.session.secretKey | default (randAlphaNum 64) | b64enc | quote }}
  CSRF_SECRET_KEY: {{ .Values.app.csrf.secretKey | default (randAlphaNum 64) | b64enc | quote }}
  
  # API keys
  API_SECRET_KEY: {{ .Values.app.api.secretKey | default (randAlphaNum 64) | b64enc | quote }}
  WEBHOOK_SECRET: {{ .Values.app.webhook.secret | default (randAlphaNum 32) | b64enc | quote }}
  
  # ========================================
  # EXTERNAL SERVICE CREDENTIALS
  # ========================================
  
  # AWS credentials
  AWS_ACCESS_KEY_ID: {{ .Values.app.aws.accessKeyId | default "" | b64enc | quote }}
  AWS_SECRET_ACCESS_KEY: {{ .Values.app.aws.secretAccessKey | default "" | b64enc | quote }}
  AWS_SESSION_TOKEN: {{ .Values.app.aws.sessionToken | default "" | b64enc | quote }}
  
  # Google Cloud credentials
  GOOGLE_APPLICATION_CREDENTIALS_JSON: {{ .Values.app.gcp.serviceAccountKey | default "{}" | b64enc | quote }}
  GCP_PROJECT_ID: {{ .Values.app.gcp.projectId | default "" | b64enc | quote }}
  
  # Azure credentials
  AZURE_CLIENT_ID: {{ .Values.app.azure.clientId | default "" | b64enc | quote }}
  AZURE_CLIENT_SECRET: {{ .Values.app.azure.clientSecret | default "" | b64enc | quote }}
  AZURE_TENANT_ID: {{ .Values.app.azure.tenantId | default "" | b64enc | quote }}
  
  # ========================================
  # EMAIL & COMMUNICATION SERVICES
  # ========================================
  
  # SMTP credentials
  EMAIL_USERNAME: {{ .Values.app.email.username | default "" | b64enc | quote }}
  EMAIL_PASSWORD: {{ .Values.app.email.password | default "" | b64enc | quote }}
  
  # SendGrid
  SENDGRID_API_KEY: {{ .Values.app.email.sendgrid.apiKey | default "" | b64enc | quote }}
  
  # Mailgun
  MAILGUN_API_KEY: {{ .Values.app.email.mailgun.apiKey | default "" | b64enc | quote }}
  MAILGUN_DOMAIN: {{ .Values.app.email.mailgun.domain | default "" | b64enc | quote }}
  
  # Twilio (SMS)
  TWILIO_ACCOUNT_SID: {{ .Values.app.sms.twilio.accountSid | default "" | b64enc | quote }}
  TWILIO_AUTH_TOKEN: {{ .Values.app.sms.twilio.authToken | default "" | b64enc | quote }}
  TWILIO_PHONE_NUMBER: {{ .Values.app.sms.twilio.phoneNumber | default "" | b64enc | quote }}
  
  # Slack
  SLACK_BOT_TOKEN: {{ .Values.app.notifications.slack.botToken | default "" | b64enc | quote }}
  SLACK_WEBHOOK_URL: {{ .Values.app.notifications.slack.webhookUrl | default "" | b64enc | quote }}
  
  # Discord
  DISCORD_BOT_TOKEN: {{ .Values.app.notifications.discord.botToken | default "" | b64enc | quote }}
  DISCORD_WEBHOOK_URL: {{ .Values.app.notifications.discord.webhookUrl | default "" | b64enc | quote }}
  
  # ========================================
  # SOCIAL LOGIN CREDENTIALS
  # ========================================
  
  # Google OAuth
  GOOGLE_OAUTH_CLIENT_SECRET: {{ .Values.app.socialLogin.google.clientSecret | default "" | b64enc | quote }}
  
  # Facebook OAuth
  FACEBOOK_APP_SECRET: {{ .Values.app.socialLogin.facebook.appSecret | default "" | b64enc | quote }}
  
  # GitHub OAuth
  GITHUB_CLIENT_SECRET: {{ .Values.app.socialLogin.github.clientSecret | default "" | b64enc | quote }}
  
  # LinkedIn OAuth
  LINKEDIN_CLIENT_SECRET: {{ .Values.app.socialLogin.linkedin.clientSecret | default "" | b64enc | quote }}
  
  # Twitter OAuth
  TWITTER_CONSUMER_SECRET: {{ .Values.app.socialLogin.twitter.consumerSecret | default "" | b64enc | quote }}
  TWITTER_ACCESS_TOKEN_SECRET: {{ .Values.app.socialLogin.twitter.accessTokenSecret | default "" | b64enc | quote }}
  
  # ========================================
  # PAYMENT GATEWAY CREDENTIALS
  # ========================================
  
  # Stripe
  STRIPE_SECRET_KEY: {{ .Values.app.payment.stripe.secretKey | default "" | b64enc | quote }}
  STRIPE_WEBHOOK_SECRET: {{ .Values.app.payment.stripe.webhookSecret | default "" | b64enc | quote }}
  
  # PayPal
  PAYPAL_CLIENT_SECRET: {{ .Values.app.payment.paypal.clientSecret | default "" | b64enc | quote }}
  
  # Razorpay
  RAZORPAY_KEY_SECRET: {{ .Values.app.payment.razorpay.keySecret | default "" | b64enc | quote }}
  
  # Square
  SQUARE_ACCESS_TOKEN: {{ .Values.app.payment.square.accessToken | default "" | b64enc | quote }}
  SQUARE_APPLICATION_SECRET: {{ .Values.app.payment.square.applicationSecret | default "" | b64enc | quote }}
  
  # ========================================
  # AI/ML SERVICE CREDENTIALS
  # ========================================
  
  # OpenAI
  OPENAI_API_KEY: {{ .Values.app.openai.apiKey | default "" | b64enc | quote }}
  OPENAI_ORGANIZATION: {{ .Values.app.openai.organization | default "" | b64enc | quote }}
  
  # Anthropic Claude
  ANTHROPIC_API_KEY: {{ .Values.app.anthropic.apiKey | default "" | b64enc | quote }}
  
  # Hugging Face
  HUGGINGFACE_API_KEY: {{ .Values.app.huggingface.apiKey | default "" | b64enc | quote }}
  
  # Google AI
  GOOGLE_AI_API_KEY: {{ .Values.app.googleAI.apiKey | default "" | b64enc | quote }}
  
  # Azure OpenAI
  AZURE_OPENAI_API_KEY: {{ .Values.app.azureOpenAI.apiKey | default "" | b64enc | quote }}
  AZURE_OPENAI_ENDPOINT: {{ .Values.app.azureOpenAI.endpoint | default "" | b64enc | quote }}
  
  # ========================================
  # MONITORING & OBSERVABILITY
  # ========================================
  
  # Datadog
  DATADOG_API_KEY: {{ .Values.monitoring.datadog.apiKey | default "" | b64enc | quote }}
  DATADOG_APP_KEY: {{ .Values.monitoring.datadog.appKey | default "" | b64enc | quote }}
  
  # New Relic
  NEW_RELIC_LICENSE_KEY: {{ .Values.monitoring.newRelic.licenseKey | default "" | b64enc | quote }}
  NEW_RELIC_API_KEY: {{ .Values.monitoring.newRelic.apiKey | default "" | b64enc | quote }}
  
  # Sentry
  SENTRY_DSN: {{ .Values.monitoring.sentry.dsn | default "" | b64enc | quote }}
  SENTRY_AUTH_TOKEN: {{ .Values.monitoring.sentry.authToken | default "" | b64enc | quote }}
  
  # Grafana
  GRAFANA_ADMIN_PASSWORD: {{ .Values.monitoring.grafana.adminPassword | default (randAlphaNum 16) | b64enc | quote }}
  GRAFANA_SECRET_KEY: {{ .Values.monitoring.grafana.secretKey | default (randAlphaNum 32) | b64enc | quote }}
  
  # ========================================
  # SECURITY & COMPLIANCE
  # ========================================
  
  # Vault credentials
  VAULT_TOKEN: {{ .Values.security.vault.token | default "" | b64enc | quote }}
  VAULT_ROLE_ID: {{ .Values.security.vault.roleId | default "" | b64enc | quote }}
  VAULT_SECRET_ID: {{ .Values.security.vault.secretId | default "" | b64enc | quote }}
  
  # Certificate authorities
  CA_CERT: {{ .Values.security.ca.cert | default "" | b64enc | quote }}
  CA_KEY: {{ .Values.security.ca.key | default "" | b64enc | quote }}
  
  # TLS certificates
  TLS_CERT: {{ .Values.security.tls.cert | default "" | b64enc | quote }}
  TLS_KEY: {{ .Values.security.tls.key | default "" | b64enc | quote }}
  
  # LDAP credentials
  LDAP_BIND_DN: {{ .Values.app.ldap.bindDn | default "" | b64enc | quote }}
  LDAP_BIND_PASSWORD: {{ .Values.app.ldap.bindPassword | default "" | b64enc | quote }}
  
  # ========================================
  # BACKUP & DISASTER RECOVERY
  # ========================================
  
  # Backup service credentials
  BACKUP_ENCRYPTION_KEY: {{ .Values.backup.encryptionKey | default (randAlphaNum 32) | b64enc | quote }}
  BACKUP_S3_ACCESS_KEY: {{ .Values.backup.s3.accessKey | default "" | b64enc | quote }}
  BACKUP_S3_SECRET_KEY: {{ .Values.backup.s3.secretKey | default "" | b64enc | quote }}
  
  # Velero backup credentials
  VELERO_CLOUD_CREDENTIALS: {{ .Values.backup.velero.cloudCredentials | default "" | b64enc | quote }}
  
  # ========================================
  # CUSTOM SECRETS
  # ========================================
  {{- with .Values.app.customSecrets }}
  {{- range $key, $value := . }}
  {{ $key }}: {{ $value | b64enc | quote }}
  {{- end }}
  {{- end }}

---
{{/*
üîê TLS Certificate Secret
*/}}
{{- if .Values.ingress.tls.enabled }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "snapfix-enterprise.fullname" . }}-tls
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "snapfix-enterprise.labels" . | nindent 4 }}
    app.kubernetes.io/component: tls
    app.kubernetes.io/part-of: snapfix-enterprise
  annotations:
    cert-manager.io/issuer: "{{ .Values.ingress.tls.issuer }}"
    cert-manager.io/cluster-issuer: "{{ .Values.ingress.tls.clusterIssuer }}"
type: kubernetes.io/tls
data:
  {{- if .Values.ingress.tls.cert }}
  tls.crt: {{ .Values.ingress.tls.cert | b64enc | quote }}
  {{- end }}
  {{- if .Values.ingress.tls.key }}
  tls.key: {{ .Values.ingress.tls.key | b64enc | quote }}
  {{- end }}
{{- end }}

---
{{/*
üîê Docker Registry Secret
*/}}
{{- if .Values.image.pullSecrets }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "snapfix-enterprise.fullname" . }}-registry
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "snapfix-enterprise.labels" . | nindent 4 }}
    app.kubernetes.io/component: registry
    app.kubernetes.io/part-of: snapfix-enterprise
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: {{ include "imagePullSecret" . | b64enc }}
{{- end }}

---
{{/*
üîê Service Account Token Secret
*/}}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "snapfix-enterprise.fullname" . }}-sa-token
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "snapfix-enterprise.labels" . | nindent 4 }}
    app.kubernetes.io/component: service-account
    app.kubernetes.io/part-of: snapfix-enterprise
  annotations:
    kubernetes.io/service-account.name: {{ include "snapfix-enterprise.serviceAccountName" . }}
type: kubernetes.io/service-account-token

---
{{/*
üîê OAuth2 Proxy Secret
*/}}
{{- if .Values.oauth2Proxy.enabled }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "snapfix-enterprise.fullname" . }}-oauth2-proxy
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "snapfix-enterprise.labels" . | nindent 4 }}
    app.kubernetes.io/component: oauth2-proxy
    app.kubernetes.io/part-of: snapfix-enterprise
type: Opaque
data:
  client-id: {{ .Values.oauth2Proxy.clientId | b64enc | quote }}
  client-secret: {{ .Values.oauth2Proxy.clientSecret | b64enc | quote }}
  cookie-secret: {{ .Values.oauth2Proxy.cookieSecret | default (randAlphaNum 32) | b64enc | quote }}
{{- end }}

---
{{/*
üîê Webhook Certificates Secret
*/}}
{{- if .Values.webhooks.enabled }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "snapfix-enterprise.fullname" . }}-webhook-certs
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "snapfix-enterprise.labels" . | nindent 4 }}
    app.kubernetes.io/component: webhooks
    app.kubernetes.io/part-of: snapfix-enterprise
type: Opaque
data:
  tls.crt: {{ .Values.webhooks.tls.cert | default "" | b64enc | quote }}
  tls.key: {{ .Values.webhooks.tls.key | default "" | b64enc | quote }}
  ca.crt: {{ .Values.webhooks.tls.caCert | default "" | b64enc | quote }}
{{- end }}

---
{{/*
üîê External Secrets Store Secret
*/}}
{{- if .Values.externalSecrets.enabled }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "snapfix-enterprise.fullname" . }}-external-secrets-auth
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "snapfix-enterprise.labels" . | nindent 4 }}
    app.kubernetes.io/component: external-secrets
    app.kubernetes.io/part-of: snapfix-enterprise
type: Opaque
data:
  {{- if eq .Values.externalSecrets.backend "vault" }}
  token: {{ .Values.externalSecrets.vault.token | b64enc | quote }}
  role-id: {{ .Values.externalSecrets.vault.roleId | b64enc | quote }}
  secret-id: {{ .Values.externalSecrets.vault.secretId | b64enc | quote }}
  {{- else if eq .Values.externalSecrets.backend "aws" }}
  access-key: {{ .Values.externalSecrets.aws.accessKey | b64enc | quote }}
  secret-key: {{ .Values.externalSecrets.aws.secretKey | b64enc | quote }}
  {{- else if eq .Values.externalSecrets.backend "gcp" }}
  service-account-key: {{ .Values.externalSecrets.gcp.serviceAccountKey | b64enc | quote }}
  {{- else if eq .Values.externalSecrets.backend "azure" }}
  client-id: {{ .Values.externalSecrets.azure.clientId | b64enc | quote }}
  client-secret: {{ .Values.externalSecrets.azure.clientSecret | b64enc | quote }}
  tenant-id: {{ .Values.externalSecrets.azure.tenantId | b64enc | quote }}
  {{- end }}
{{- end }}

---
{{/*
üîê Backup Encryption Secret
*/}}
{{- if .Values.backup.enabled }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "snapfix-enterprise.fullname" . }}-backup-encryption
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "snapfix-enterprise.labels" . | nindent 4 }}
    app.kubernetes.io/component: backup
    app.kubernetes.io/part-of: snapfix-enterprise
type: Opaque
data:
  encryption-key: {{ .Values.backup.encryptionKey | default (randAlphaNum 32) | b64enc | quote }}
  passphrase: {{ .Values.backup.passphrase | default (randAlphaNum 16) | b64enc | quote }}
{{- end }}

---
{{/*
üîê API Rate Limiting Secret
*/}}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "snapfix-enterprise.fullname" . }}-rate-limit
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "snapfix-enterprise.labels" . | nindent 4 }}
    app.kubernetes.io/component: rate-limiting
    app.kubernetes.io/part-of: snapfix-enterprise
type: Opaque
data:
  # Rate limiting secrets
  rate-limit-secret: {{ .Values.app.rateLimit.secret | default (randAlphaNum 32) | b64enc | quote }}
  throttle-secret: {{ .Values.app.rateLimit.throttleSecret | default (randAlphaNum 32) | b64enc | quote }}
  
  # DDoS protection secrets
  ddos-protection-key: {{ .Values.app.security.ddosProtectionKey | default (randAlphaNum 32) | b64enc | quote }}
  
  # Bot detection secrets
  bot-detection-key: {{ .Values.app.security.botDetectionKey | default (randAlphaNum 32) | b64enc | quote }}

---
{{/*
üîê Feature Flag Service Secret
*/}}
{{- if .Values.featureFlags.enabled }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "snapfix-enterprise.fullname" . }}-feature-flags
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "snapfix-enterprise.labels" . | nindent 4 }}
    app.kubernetes.io/component: feature-flags
    app.kubernetes.io/part-of: snapfix-enterprise
type: Opaque
data:
  # LaunchDarkly
  {{- if .Values.featureFlags.launchDarkly.enabled }}
  launchdarkly-sdk-key: {{ .Values.featureFlags.launchDarkly.sdkKey | b64enc | quote }}
  {{- end }}
  
  # Split.io
  {{- if .Values.featureFlags.split.enabled }}
  split-api-key: {{ .Values.featureFlags.split.apiKey | b64enc | quote }}
  {{- end }}
  
  # Flagsmith
  {{- if .Values.featureFlags.flagsmith.enabled }}
  flagsmith-environment-key: {{ .Values.featureFlags.flagsmith.environmentKey | b64enc | quote }}
  {{- end }}
{{- end }}